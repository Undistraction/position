{
  "name": "grunt-open",
  "description": "Open urls and files from a grunt task",
  "version": "0.2.3",
  "homepage": "https://github.com/onehealth/grunt-open",
  "author": {
    "name": "Jarrod Overson",
    "email": "jsoverson@gmail.com",
    "url": "http://jarrodoverson.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/onehealth/grunt-open.git"
  },
  "bugs": {
    "url": "https://github.com/onehealth/grunt-open/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/onehealth/grunt-open/blob/master/LICENSE"
    }
  ],
  "main": "Gruntfile.js",
  "bin": {
    "grunt-open": "bin/grunt-open"
  },
  "engines": {
    "node": ">= 0.6.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "open": "~0.0.4"
  },
  "devDependencies": {
    "grunt": "~0.4.0",
    "grunt-contrib-jshint": "~0.6.4"
  },
  "keywords": [
    "gruntplugin",
    "open",
    "url",
    "file"
  ],
  "readme": "# grunt-open\n\nOpen urls and files from a grunt task\n\n## Installation\n\nInstall using npm in the root of your project directory (where your package.json and Gruntfile.js are located)\n\n```bash\nnpm install --save-dev grunt-open\n```\n\n## Usage\n\nThis is used as part of your grunt tasks, between the `server` and `watch` tasks\n\n```js\ngrunt.registerTask('default', ['server', 'open', 'watch']);\n```\n\nYou can specify different configurations so that you can set up task chains (see the configuration below for this example's config)\n\n```js\ngrunt.registerTask('dev', ['server', 'open:dev', 'watch']);\ngrunt.registerTask('build', ['build', 'server', 'open:build', 'watch:build');\n```\n\n## Gruntfile Configuration\n\nThis is a very simple task and takes two configuration parameters, `path` (required) and `app` (optional). If `app` is not specified, the default system browser will be launched\n\n```js\ngrunt.initConfig({\n  open : {\n    dev : {\n      path: 'http://127.0.0.1:8888/src',\n      app: 'Google Chrome'\n    },\n    build : {\n      path : 'http://google.com/',\n      app: 'Firefox'\n    },\n    file : {\n      path : '/etc/hosts'\n    },\n    custom: {\n      path : function () {\n        return grunt.option('path');\n      } \n    }\n  }\n})\n\ngrunt.loadNpmTasks('grunt-open');\n\n```\n\n## Options\n\n#### openOn\nType: `String`\n\nWhile it may not be common, you may want to delay the opening of your `path` at a later time of the grunt process. The option `openOn` allows you to define an event (coming through from [grunt.event](http://gruntjs.com/api/grunt.event)) that would signal the expected triggering of `open`. Example:\n\n```js\ngrunt.initConfig({\n  open: {\n    delayed: {\n      path: 'http://localhost:3000'\n      app: 'Google Chrome'\n      options: {\n        openOn: 'serverListening'\n      }\n    }\n  }\n});\n\ngrunt.registerTask('server', function () {\n  var server = require('myServer');\n  server.listen(3000, function (err) {\n    if (!err) {\n      grunt.log.writeln('Server started');\n      grunt.event.emit('serverListening'); // triggers open:delayed\n    }\n  });\n})\n```\n\n#### delay\nType : `Number`\n\nSet a delay for the open. *Note:* This task moves on immediately. If this is the last task in your chain you run the\nrisk of node exiting before your open is called.\n\n[grunt]: https://github.com/gruntjs/grunt\n[getting_started]: https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][grunt].\n\n## Release History\n\n - 0.2.3 merged support for functions in config, added delay, merged openOn\n - 0.2.2 added `app` parameter.\n - 0.2.0 grunt 0.4.0 support, added and preferring `path` parameter.\n - 0.1.0 initial release\n\n## License\n\nCopyright OneHealth Solutions, Inc\n\nWritten by Jarrod Overson\n\nLicensed under the Apache 2.0 license.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-open@0.2.3",
  "_from": "grunt-open@^0.2.3"
}
