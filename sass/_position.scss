@import 'position/support';

/**
 * Mixins for setting an elements position and offsets based on the original mixin by Hugo
 * Giraudel found [here](http://hugogiraudel.com/2014/05/19/new-offsets-sass-mixin/)
 * @author Pedr Browne
 **/

/**
 * @param {String} $position
 *  One of absolute | relative | fixed
 *
 * @param {List} $args (())
 *  A list of offset keywords and values. Some keywords require a following value, some do not
 *  accept a following value, and for some the value is optional. The possible values are:
 *
 *  - `top`, `bottom`, `left`, and `right` If one of these keywords is followed by a value, the
 *  offset will be set to that value. If no value follows, the offset will be set to zero.
 *  - `offset | all | offset-h | offset-v` All these values require a value. `offset` and `all`
 *    (which is just an alias of `offset`) will set all four offsets ('top', 'bottom', 'left'
 *    and `right`) to the following value. `offset-h` will set the `left` and `right` offsets to the
 *    following value, and `offset-v` will set the `top` and `bottom` offsets to the following
 *    value.
 *  - `fill`, `fill-h` and `fill-v` do not take a following value. `fill` will set all offsets to
 *    zero. `fill-h` will set the `left` and `right` offsets to zero, and `fill-v` will set the
 *    `top` and `bottom` offsets to zero.
 *
 *  Values are evaluated from left to right with later values overriding earlier values.
 *
 * @example scss - Usage
 *   .element {
 *     @include position(absolute, left top 10px);
 *   }
 *
 * @example css - CSS Output
 *   .element {
 *     position: absolute;
 *     left: 0;
 *     top: 10px;
 *   }
 *
 * @throws Argument Error
 * @output Outputs the position property and any given offset properties
 */
@mixin position($position, $args:null) {

  $offsets: ();

  // Check position is a supported value
  @if not pos-validate-position($position) {
    $error: pos-throw-error( $pos-error-invalid-position,  "#{$position} is not a valid value for `position`" );
  }

  // Parse offsets if preset
  @if $args {
    $offsets: pos-parse-offsets($position, $args);
  }

  @include pos-render($position, $offsets);
}

// Shorthand Mixins

/**
 * Shorthand for `@include position(absolute, args)`.
 * @param {List} $args A list of offset keywords and values.
 * @output Outputs the position property and any given offset properties
 * @see {mixin} position
 */
@mixin absolute($args: ()) {
  @include position(absolute, $args);
}

/**
 * Shorthand for `@include position(absolute, args)`.
 * @param {List} $args A list of offset keywords and values.
 * @output Outputs the position property and any given offset properties
 * @see {mixin} position
 */
@mixin fixed($args: ()) {
  @include position(fixed, $args);
}

/**
 * Shorthand for `@include position(absolute, args)`.
 * @param {List} $args A list of offset keywords and values.
 * @output Outputs the position property and any given offset properties
 * @see {mixin} position
 */
@mixin relative($args: ()) {
  @include position(relative, $args);
}
